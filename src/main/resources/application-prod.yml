logging:
   level:
      org.springframework.security: DEBUG
      org.springframework.web: DEBUG

spring:
    datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:splitspends}
        username: ${RDS_USERNAME:splitspends}
        password: ${RDS_PASSWORD:splitspends}

    jpa:
        show-sql: true
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MySQL57Dialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: ${GOOGLE_APP_ID:81319930206-j7m2caf12or4sfa1ptufmf47061lile4.apps.googleusercontent.com}
              clientSecret: ${GOOGLE_APP_SECRET:HQs7xvA8x6LvjwR61VveoAyg}
              redirectUriTemplate: '{baseUrl}/oauth2/callback/{registrationId}'
              scope:
                - email
                - profile
            facebook:
              clientId: ${FACEBOOK_APP_ID:933509166815194}
              clientSecret: ${FACEBOOK_APP_SECRET:d8a4363fca184032718a41e3a447c26f}
              redirectUriTemplate: '{baseUrl}/oauth2/callback/{registrationId}'
              scope:
                - email
                - public_profile
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: ${TOKEN_SECRET:926D96C90030DD58429D2751AC1BDBBC}
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:4200/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect